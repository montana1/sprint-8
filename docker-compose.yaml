version: '3.8'

volumes:
  postgres-keycloak-data:

networks:
  sprint8:
    driver: bridge


services:
  keycloak_db:
    image: postgres:15
    networks:
      - sprint8
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - postgres-keycloak-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:21.1
    networks:
      - sprint8
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_db:5432/keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    ports:
      - "8080:8080"
    depends_on:
      - keycloak_db
  frontend:
    networks:
      - sprint8
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://backand:8000
      REACT_APP_KEYCLOAK_URL: http://keycloak:8080
      REACT_APP_KEYCLOAK_REALM: reports-realm
      REACT_APP_KEYCLOAK_CLIENT_ID: reports-frontend
  backend:
    networks:
      - sprint8
    build: ./API
    ports:
      - "8000:8000"
    container_name: backend
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_SET_URI: http://keycloak:8080/realms/reports-realm/protocol/openid-connect/certs